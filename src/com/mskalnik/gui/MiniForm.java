/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mskalnik.gui;

import com.mskalnik.bl.PatientsHandler;
import com.mskalnik.model.Contact;
import com.mskalnik.model.NextOfKin;
import com.mskalnik.model.Patient;
import java.awt.Component;
import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javafx.scene.control.Alert;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author mskalnik
 */
public class MiniForm extends javax.swing.JPanel {

    private static final PatientsHandler PATIENTS_HANDLER = new PatientsHandler();
    
    /**
     * Creates new form panelMiniForm
     */
    public MiniForm() {
        initComponents();
        fillComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMiniForm = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPatientFirstName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPatientMiddleName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPatientLastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taComplaint = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        txtTelephone = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTelephone2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtKinFirstName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtKinMiddleName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtKinLastName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtKinRelationship = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        cbMonth = new javax.swing.JComboBox<>();
        cbDay = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        panelMiniForm.setLayout(null);
        panelMiniForm.add(jLabel12);
        jLabel12.setBounds(346, 5, 341, 29);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Mini registration form");
        panelMiniForm.add(jLabel1);
        jLabel1.setBounds(10, 10, 341, 29);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel2.setText("Patient");
        panelMiniForm.add(jLabel2);
        jLabel2.setBounds(10, 40, 70, 29);
        panelMiniForm.add(jLabel13);
        jLabel13.setBounds(346, 44, 341, 29);

        jLabel3.setText("First name:");
        panelMiniForm.add(jLabel3);
        jLabel3.setBounds(10, 70, 80, 29);

        txtPatientFirstName.setColumns(1);
        panelMiniForm.add(txtPatientFirstName);
        txtPatientFirstName.setBounds(130, 70, 250, 29);

        jLabel4.setText("Middle name:");
        panelMiniForm.add(jLabel4);
        jLabel4.setBounds(10, 100, 100, 29);

        txtPatientMiddleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientMiddleNameActionPerformed(evt);
            }
        });
        panelMiniForm.add(txtPatientMiddleName);
        txtPatientMiddleName.setBounds(130, 100, 250, 29);

        jLabel5.setText("Last name:");
        panelMiniForm.add(jLabel5);
        jLabel5.setBounds(10, 130, 80, 29);
        panelMiniForm.add(txtPatientLastName);
        txtPatientLastName.setBounds(130, 130, 250, 29);

        jLabel6.setText("Date of birth:");
        panelMiniForm.add(jLabel6);
        jLabel6.setBounds(10, 160, 100, 29);

        cbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbYearActionPerformed(evt);
            }
        });
        panelMiniForm.add(cbYear);
        cbYear.setBounds(270, 160, 110, 29);

        jLabel7.setText("Complaint:");
        panelMiniForm.add(jLabel7);
        jLabel7.setBounds(10, 190, 80, 29);

        taComplaint.setColumns(40);
        taComplaint.setRows(5);
        jScrollPane1.setViewportView(taComplaint);

        panelMiniForm.add(jScrollPane1);
        jScrollPane1.setBounds(130, 190, 250, 120);

        jLabel8.setText("Telephone 1:");
        panelMiniForm.add(jLabel8);
        jLabel8.setBounds(10, 320, 90, 29);
        panelMiniForm.add(txtTelephone);
        txtTelephone.setBounds(130, 320, 250, 29);

        jLabel9.setText("Telephone  2:");
        panelMiniForm.add(jLabel9);
        jLabel9.setBounds(10, 350, 100, 29);
        panelMiniForm.add(txtTelephone2);
        txtTelephone2.setBounds(130, 350, 250, 29);

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel10.setText("Next of Kin");
        panelMiniForm.add(jLabel10);
        jLabel10.setBounds(10, 390, 110, 29);

        jLabel11.setText("First name:");
        panelMiniForm.add(jLabel11);
        jLabel11.setBounds(10, 420, 90, 29);
        panelMiniForm.add(txtKinFirstName);
        txtKinFirstName.setBounds(130, 420, 250, 29);

        jLabel15.setText("Middle name:");
        panelMiniForm.add(jLabel15);
        jLabel15.setBounds(10, 450, 100, 29);
        panelMiniForm.add(txtKinMiddleName);
        txtKinMiddleName.setBounds(130, 450, 250, 29);

        jLabel16.setText("Last name:");
        panelMiniForm.add(jLabel16);
        jLabel16.setBounds(10, 480, 80, 29);
        panelMiniForm.add(txtKinLastName);
        txtKinLastName.setBounds(130, 480, 250, 29);

        jLabel17.setText("Relationship:");
        panelMiniForm.add(jLabel17);
        jLabel17.setBounds(10, 510, 90, 29);
        panelMiniForm.add(txtKinRelationship);
        txtKinRelationship.setBounds(130, 510, 250, 29);

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        panelMiniForm.add(btnConfirm);
        btnConfirm.setBounds(250, 540, 130, 32);

        panelMiniForm.add(cbMonth);
        cbMonth.setBounds(200, 160, 70, 29);

        panelMiniForm.add(cbDay);
        cbDay.setBounds(130, 160, 70, 29);
        panelMiniForm.add(jSeparator1);
        jSeparator1.setBounds(0, 390, 420, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMiniForm, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMiniForm, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPatientMiddleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientMiddleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientMiddleNameActionPerformed

    private void cbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbYearActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        String firstName = txtPatientFirstName.getText();
        String middleName = txtPatientMiddleName.getText();
        String lastName = txtPatientLastName.getText();
        String complaint = taComplaint.getText();
        String kinFirst = txtKinFirstName.getText();
        String kinMiddle = txtKinMiddleName.getText();
        String kinLast = txtKinLastName.getText();
        String relationship = txtKinRelationship.getText();
        String telephone = txtTelephone.getText();
        String telephone2 = txtTelephone2.getText();
        int year = Integer.parseInt(cbYear.getSelectedItem().toString());
        int month = Integer.parseInt(cbMonth.getSelectedItem().toString());
        int day = Integer.parseInt(cbDay.getSelectedItem().toString());
        LocalDate date = LocalDate.of(year, month, day);
        
        NextOfKin nok = new NextOfKin(kinFirst, kinMiddle, kinLast, relationship);
        Contact contact = new Contact(telephone, telephone2);
        Patient p = new Patient(firstName, middleName, lastName, date, nok, complaint, contact);
        
        if (correctFormat(firstName, 50) && correctFormat(middleName, 50) &&
                correctFormat(lastName, 50) && correctFormat(complaint, 200) &&
                        correctFormat(kinFirst, 50) && correctFormat(kinMiddle, 50) &&
                                correctFormat(kinLast, 50) && correctFormat(relationship, 50) &&
                                    correctFormat(telephone, 50) && correctFormat(telephone2, 50)) {
            PATIENTS_HANDLER.insertPatientMiniForm(p);
            JOptionPane.showMessageDialog(null, "User " + firstName + " " + lastName + " added!\n");
            
        } else {
            JOptionPane.showMessageDialog(null, "WARNING: All data must be entered");
        }        
    }//GEN-LAST:event_btnConfirmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JComboBox<String> cbDay;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel panelMiniForm;
    private javax.swing.JTextArea taComplaint;
    private javax.swing.JTextField txtKinFirstName;
    private javax.swing.JTextField txtKinLastName;
    private javax.swing.JTextField txtKinMiddleName;
    private javax.swing.JTextField txtKinRelationship;
    private javax.swing.JTextField txtPatientFirstName;
    private javax.swing.JTextField txtPatientLastName;
    private javax.swing.JTextField txtPatientMiddleName;
    private javax.swing.JTextField txtTelephone;
    private javax.swing.JTextField txtTelephone2;
    // End of variables declaration//GEN-END:variables

    private void fillComboBoxes() {
        for (int i = 1; i <= 31; i++) {
            cbDay.addItem(String.valueOf(i));
        }
        
        for (int i = 1; i <= 12; i++) {
            cbMonth.addItem(String.valueOf(i));
        }
        
        for (int i = 2019; i >= 1990; i--) {
            cbYear.addItem(String.valueOf(i));
        }
    }

    private Boolean correctFormat(String text, int max) {
        if (text.trim().length() > 0 && text.length() < max)
            return true;
        return false;
    }

}
